/*******************************************************************************
 *
 * Datinator (c) by Gerhard W. Gruber in 2014
 *
 *******************************************************************************/

#ifndef DATE_MANIPULATOR_PANEL_H_INCLUDED
#define DATE_MANIPULATOR_PANEL_H_INCLUDED

#include <QtWidgets/QFrame>

#include "manipulator/date/date.h"
#include "manipulator/date/date_panel_gui.h"
#include "manipulator/manipulator_panel_qt.moc"

class DateManipulator;

class DateManipulatorPanel
	:	public ManipulatorPanel
{
public:
	Q_OBJECT

public:
	DateManipulatorPanel(DateManipulator *oOwner, QWidget *oParent = NULL);
	virtual ~DateManipulatorPanel(void);

	StdString getInputFormat(void) const;
	void setInputFormat(StdString const &oFormat);

	StdString getOutputFormat(void) const;
	void setOutputFormat(StdString const &oFormat);

	bool isSysdate(void) const;
	void setSysdate(bool bSysdate = true);

	bool isSysdateStart(void) const;
	void setSysdateStart(bool bSysdateStart = true);

protected slots:
	void onTextChanged(StdString oText);
	void onInputFormat(int nSelection);
	void onOutputFormat(int nSelection);
	void onSysdateStart(bool bSysdateStart);

protected:
	StdString getFormat(QComboBox *oBox, QLineEdit *oCustomFormat) const;
	void setFormat(StdString const &oString, QComboBox *oBox, QLineEdit *oCustomFormat);
	void formatChanged(QComboBox *oBox, QLineEdit *oCustomFormat, bool bInput);

private:
	void initCombobox(QComboBox *oBox);

private:
	Ui::DateManipulatorGUI *mGUI;
};

#endif // DATE_MANIPULATOR_PANEL_H_INCLUDED
