/*******************************************************************************
 *
 * SupportLib (c) by Gerhard W. Gruber in 2014
 *
 *******************************************************************************/

#ifndef DB_PANEL_H_INCLUDED
#define DB_PANEL_H_INCLUDED

#include <QtWidgets/QFrame>
#include <vector>

#include "datinator_types.h"
#include "plugin/plugin_dll_api.h"
#include "support/patterns/observer.h"
#include "plugin/sql/gui/events.h"
#include "plugin/sql/gui/db_panel_gui.h"

class QSettings;
class DBLoginPanel;
class ContainerPanel;

class PLUGIN_DLL_EXPORT DBPanel
	:	public QFrame,
		public Listener<SQLPreview::ActionEvent, QVariant, int>,	// Listener when changing to table select
		public Dispatcher<StdString>	// Table selected
{
	Q_OBJECT

public:
	DBPanel(QWidget *oParent = NULL);
	virtual ~DBPanel(void);

	void setRowStretch(int nRow, int nValue);
	void setTables(std::vector<StdString> const &oTables, StdString const &oSelection = "", bool bNotify = true);
	bool selectTable(StdString const &oSelection, bool bNotify);

	inline void addTableSelectListener(Listener<StdString> *oListener) { Dispatcher<StdString>::addListener(oListener); };
	inline void removeTableSelectListener(Listener<StdString> *oListener) { Dispatcher<StdString>::removeListener(oListener); };

	void setLoginPanel(QWidget *oLoginPanel);
	void setConfigPanel(QWidget *oConfigPanel);

	virtual bool loadProfile(QSettings &oProfile, StdString const &oKey);
	virtual void saveProfile(QSettings &oProfile, StdString const &oKey);

protected:
	inline void notifyTableSelectListeners(StdString const &oTable) { Dispatcher<StdString>::notify(oTable); };
	void handleNotification(Dispatcher<SQLPreview::ActionEvent, QVariant, int> *oSource, SQLPreview::ActionEvent nEvent, QVariant oData, int nRowCount);

protected slots:
	virtual void onTableSelect(int nCurrentSelection);
	virtual void onReloadTables(void);

private:
	void init(void);

private:
	Ui::DBPanelGUI *mGUI;
	QWidget *mLoginPanel;
	QWidget *mConfigPanel;
};

#endif // DB_PANEL_H_INCLUDED
