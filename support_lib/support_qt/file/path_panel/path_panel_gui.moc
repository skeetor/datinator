/*******************************************************************************
 *
 * Support Library QT (c) by Gerhard W. Gruber in 2014
 *
 ******************************************************************************/

#ifndef _PATH_SELECT_PANEL_GUI_H_INCLUDED
#define _PATH_SELECT_PANEL_GUI_H_INCLUDED

#include <QtWidgets/QFrame>

#include "support/unicode/unicode_types.h"
#include "support_qt/support_qt_dll_api.h"
#include "support_qt/file/path_panel/path_panel_gui.h"
#include "support/patterns/observer.h"

/**
 * PathSelectPanel provides a path input control with a browse
 * button and a label. If the browse button is used and a new path
 * is selected, the listeners will be notified about it.
 */
class SUPPORT_QT_DLL_EXPORT PathSelectPanel : public QFrame, protected Dispatcher<spt::string::string_t>
{
	Q_OBJECT

public:
	typedef enum { ANSI, UTF8, UTF16 } Encoding;

public:
	PathSelectPanel(bool bOpenMode = true, bool bDirectoryMode = false, QWidget *oParent = NULL);
	virtual ~PathSelectPanel(void);

	spt::string::string_t getPath(void);
	void setPath(spt::string::string_t const &oPath);

	/**
	 * setPathNotify() sets the path and additionally notifies
	 * the listeners about the change, as if the browse button
	 * had been used.
	 */
	void setPathNotify(spt::string::string_t const &oPath);

	void setEditable(bool bEditable = true);
	bool isEditable(void);

	void addPathListener(Listener<spt::string::string_t> *oListener);
	void removePathListener(Listener<spt::string::string_t> *oListener);

	void notifyPathListeners(spt::string::string_t const &oPath);

	/**
	 * If openMode == true the browse dialog will look for
	 * an existing file, otherwise it should be created.
	 * Open vs. Save.
	 */
	void setOpenMode(bool bOpen = true);
	bool isOpenMode(void);

	void setDirectoryMode(bool bDirectoryMode = true);
	bool isDirectoryMode(void);

protected slots:
	virtual void onBrowse(void);

private:
	Ui::PathSelectGUI *mGUI;
	bool mOpenMode;
	bool mDirectoryMode;
};

#endif // _PATH_SELECT_PANEL_GUI_H_INCLUDED
